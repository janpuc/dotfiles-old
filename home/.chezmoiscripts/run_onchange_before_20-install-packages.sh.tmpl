#!/usr/bin/env bash

# packages.def hash: {{ include (joinPath .chezmoi.sourceDir ".chezmoitemplates/packages.def") | sha256sum }}s

set -euo pipefail

# This script uses Homebrew to install relevant packages.

# The packages to install are defined in packages.def Chezmoi template. Changes to the packages.def
# template will be detected by Chezmoi between executions to apply any changes.
# NOTE: Packages added manually to the target are removed by the `cleanup` option.

# Prompt pre-emptively for sudo password
printf "Info: A password may be required to install Homebrew packages.\n"
sudo -v

# Keep-alive: update existing `sudo` time stamp until the script has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

if [ -x ${BREW_PATH} ]; then
    # Source Homebrew environment variables
    eval "$(${BREW_PATH} shellenv)"

    # Update Homebrew and install packages
    printf "Info: Updating Homebrew.\n"
    brew update
    printf "Info: Installing Homebrew packages.\n"
    brew bundle --no-lock --file=/dev/stdin <<EOF
    {{ includeTemplate "packages.def" . -}}
    EOF
    printf "Info: Cleaning up Homebrew packages.\n"
    brew bundle cleanup --force --file=/dev/stdin <<EOF
    {{ includeTemplate "packages.def" . -}}
    EOF
    
    if brew autoupdate -h >/dev/null 2>&1; then
        if brew autoupdate start 43200 --upgrade --cleanup --immediate --sudo >/dev/null 2>&1; then
            printf "Info: Brew autoupdate started.\n"
        else
            printf "Info: Brew autoupdate already running.\n"
        fi
    else
        printf "Warning: Brew autopudate not available. To enable add homebrew/autoupdate to taps.\n"
    fi

    brew cleanup
    printf "Info: Homebrew package installations completed.\n"
else
    printf "Error: Homebrew is not installed. Exiting.\n"
    exit 1
fi
